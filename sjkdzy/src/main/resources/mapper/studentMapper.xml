<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.example.repository.StudentRepository">
    <select id="findAll" resultType="org.example.entity.Student">
        select * from student
    </select>
    <select id="findByID" resultType="org.example.entity.Student">
        select * from student where uuid = #{id} and isdeleted = 0
    </select>
    <insert id="register">
        insert into student(uuid, name, sex, grade, class_num, major, password,isdeleted) values(#{uuid}, #{name}, #{sex}, #{grade}, #{class_num}, #{major}, #{password},0)
    </insert>
    <select id="countNum" resultType="int">
        select count(*) from student
    </select>
    <update id="changePassword">
        update student set password = #{password} where uuid = #{uuid}
    </update>
    <select id="selectScoreByid" resultType="org.example.entity.Score">
        select * from sc,course where sc.studentuuid = #{studentuuid} and sc.courseuuid = course.uuid and course.isdeleted = 0
    </select>
    <select id="selectCourseBycourseid"  resultType="org.example.entity.Course">
        select * from course where uuid = #{uuid} and isdeleted = 0
    </select>
    <select id="selectCourseBymajor"  resultType="org.example.entity.Course">
        select * from course where major like "%"#{major}"%" and isdeleted = 0
    </select>
    <select id="selectCourseByname"  resultType="org.example.entity.Course">
        select * from course where name like "%"#{name}"%" and isdeleted = 0
    </select>
    <select id="selectCourseByteacherID"  resultType="org.example.entity.Course">
        select * from course where teacher_id = #{teacher_id} and isdeleted = 0
    </select>
    <select id="selectTeacherByName" resultType="org.example.entity.Teacher">
        select  * from teacher where name like "%"#{name}"%"
    </select>
    <insert id="insertTeacherScore">
        insert into teacherscore(studentuuid, teacheruuid, score, detail, courseuuid) values (#{studentuuid}, #{teacheruuid},
                                                                                              #{score}, #{detail}, #{courseuuid})
    </insert>
    <insert id="insertCourseByid">
        insert into sc(studentuuid, courseuuid, score, Compulsory, examscore, dailyscore,checkscore, grade, courseName,credit, is_updated) values (#{studentuuid}, #{courseuuid}, #{score},
                                                                                                                                    #{Compulsory}, #{examscore}, #{dailyscore}, #{checkscore}, #{grade}, #{courseName},  #{credit}, #{is_updated})
    </insert>
    <delete id="deleteCourseByid">
        delete from sc where studentuuid = #{studentuuid} and courseuuid = #{courseuuid}
    </delete>
    <update id="changeStudentInfo">
        update student set name = #{name}, sex = #{sex}, grade = #{grade}, class_num = #{class_num}, major = #{major} where uuid = #{uuid}
    </update>
    <select id="selectNoticeIDByStudentID" resultType="org.example.entity.NS">
        select * from ns where studentuuid = #{studentuuid}
    </select>
    <select id="selectNoticeByNoticeID" resultType="org.example.entity.Notice">
        select * from notice where uuid = #{uuid} and isdeleted = 0
    </select>
    <select id="selectNoticeByStuID" resultType="org.example.entity.Notice">
        select * from notice where uuid = any(select noticeuuid from ns where studentuuid = #{studentuuid}) and isdeleted = 0
    </select>
    <update id="deleteStudent">
        update student set isdeleted = 1 where uuid = #{uuid}
    </update>
    <select id="countCourseStuNum" resultType="int">
        select count(*) from sc where courseuuid = #{courseuuid}
    </select>
</mapper>